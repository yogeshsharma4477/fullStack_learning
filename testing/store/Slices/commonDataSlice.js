// extraReducers = indicates are additional reducers apart from the reducers generated by create slice
import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  mobileNumber: "",
  userInfo: {},
  compName: "",
  compLegalName: "",
  companyName: "",
  ip: "",
  source: null,
  parentid: "",
  docid: "",
  shorturl: "",
  isVerified: "",
  sesionId: "",
  stdcode: "022",
  sphinx_id: "",
  toastData: "",
  SABNCheckbox: false,
  isDirectLand: true,
  isThroughLandingPage: false,
  getSource: {
    7: "web",
    77: "web",
    2: "touch",
    1: "android",
    3: "ios",
    // 2, & jdlite=1:"jdlite",
    27: "jdmart web",
    22: "jdmart touch",
    21: "jdmart android",
    23: "jdmart ios",
    11: "touch"
  },
  isBussiness:null,
  contactDetailProgress: 25,
  fromIndex:null,
  isCategoryPageLoadCtCalled : false,
  isCopyright_infringement:false
};

const commonDataSlice = createSlice({
  name: "CommonValues",
  initialState,
  reducers: {
    updateCommonValues: (state, action) => {
      state[action.payload.key] = action.payload.value;
    },
    updateMultipleCommonValues: (state, action) => {
      state = { ...state, ...action.payload };
      return state;
    },
  },
});

export default commonDataSlice.reducer;
export const { updateCommonValues, updateMultipleCommonValues } =
  commonDataSlice.actions;
